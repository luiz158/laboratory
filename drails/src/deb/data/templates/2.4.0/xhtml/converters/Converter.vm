package ${packageName}.converters;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.FacesConverter;
import org.primefaces.component.picklist.PickList;
import org.primefaces.model.DualListModel;
import br.gov.frameworkdemoiselle.util.Beans;
import ${packageName}.persistence.${pojo}DAO;
import ${packageName}.domain.${pojo};

@FacesConverter(value= "Conversor${pojo}")
public class ${pojo}Converter implements Converter {
    
    private ${pojo}DAO ${beanLower}DAO = Beans.getReference(${pojo}DAO.class);
    
    @Override
    public Object getAsObject(FacesContext context, UIComponent component, String value) {
        try{
            Object ret = null;
            if (component instanceof PickList) {
                Object dualList = ((PickList) component).getValue();
                DualListModel<?> dl = (DualListModel<?>) dualList;
                for (Object o : dl.getSource()) {
                    String id = String.valueOf(((${pojo}) o).get${idNameUpper}());
                        if (value.equals(id)) {
                            ret = o;
                        break;
                    }
                }
                if (ret == null){
                    for (Object o : dl.getTarget()) {
                        String id = String.valueOf(((${pojo}) o).get${idNameUpper}());
                        if (value.equals(id)) {
                            ret = o;
                            break;
                        }
                    }
                }
            } 
            else {
                if (value.trim().equals("")) {
                    ret = null;
                } 
                else {
                    ${idType} varId = ${idType}.valueOf(value);
                    ret =  ${beanLower}DAO.load(varId);
                }
            }
            return ret;
        }
        catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    @Override
    public String getAsString(FacesContext context, UIComponent component, Object value) {
        try{
            if (value == null || value.equals("")) {
                return "";
            } 
            else {			        
                return String.valueOf(((${pojo}) value).get${idNameUpper}());
            }
        }
        catch (Exception e) {
            e.printStackTrace();
            return "";
        }		
    }
}
