
    private DualListModel<${attrClassOfValue}> ${attrClassFirstLower}List;

    @Inject
    private ${attrClassOfValue}BC ${attrClassFirstLower}BC;

    public void set${attrClassOfValue}List(DualListModel<${attrClassOfValue}> ${attrClassFirstLower}List) {
        this.${attrClassFirstLower}List = ${attrClassFirstLower}List;
    }

    public void add${attrClassOfValue}List(List<${attrClassOfValue}> ${attrClassFirstLower}List) {
        this.getBean().get${attrNameFirstUp}().addAll(${attrClassFirstLower}List);
    }

    public void delete${attrClassOfValue}List(List<${attrClassOfValue}> ${attrClassFirstLower}List) {
        this.getBean().get${attrNameFirstUp}().removeAll(${attrClassFirstLower}List);
    }


    public DualListModel<${attrClassOfValue}> get${attrClassOfValue}List() {
        if (this.${attrClassFirstLower}List == null) {
            List<${attrClassOfValue}> source = ${attrClassFirstLower}BC.findAll();
            List<${attrClassOfValue}> target = this.getBean().get${attrNameFirstUp}();

            if (source == null) {
                source = new ArrayList<${attrClassOfValue}>();
            }
            if (target == null) {
                target = new ArrayList<${attrClassOfValue}>();
            }else{
                source.removeAll(target);
            }
            this.${attrClassFirstLower}List = new DualListModel<${attrClassOfValue}>(source, target);

        }
        return this.${attrClassFirstLower}List;
    }

    @SuppressWarnings("unchecked")
    public void onTransfer(TransferEvent event) {
        if (event.isAdd()){
            this.add${attrClassOfValue}List((List<${attrClassOfValue}>) event.getItems());
        }
        if (event.isRemove()) {
            this.delete${attrClassOfValue}List((List<${attrClassOfValue}>) event.getItems());
        }
    }    
    